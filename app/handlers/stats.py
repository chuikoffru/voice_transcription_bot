from aiogram import types
import logging
from peewee import fn
from models import Usage, User, db

logger = logging.getLogger(__name__)

async def handle_stats(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats"""
    logger.info(f"Received /stats command from user {message.from_user.id}")
    try:
        with db:
            total_duration = (
                Usage.select(fn.SUM(Usage.duration))
                .join(User)
                .where(User.tg_id == message.from_user.id)
                .scalar()
                or 0
            )

            total_messages = (
                Usage.select()
                .join(User)
                .where(User.tg_id == message.from_user.id)
                .count()
            )

            recent_usages = (
                Usage.select()
                .join(User)
                .where(User.tg_id == message.from_user.id)
                .order_by(Usage.created_at.desc())
                .limit(5)
            )

            stats_message = (
                "üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n"
                f"üéØ –í—Å–µ–≥–æ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–π: {total_messages}\n"
                f"‚è± –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {total_duration:.1f} —Å–µ–∫.\n"
                f"‚åõÔ∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: {(total_duration / total_messages if total_messages else 0):.1f} —Å–µ–∫.\n"
            )

            if recent_usages:
                stats_message += "\nüîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏:\n"
                for usage in recent_usages:
                    chat_name = usage.chat.name or str(usage.chat.tg_chat_id)
                    chat_type = (
                        "–ª–∏—á–Ω–æ–º —á–∞—Ç–µ"
                        if usage.chat.tg_chat_id == message.from_user.id
                        else f"–≥—Ä—É–ø–ø–µ {chat_name}"
                    )
                    stats_message += (
                        f"- {usage.created_at.strftime('%Y-%–º-%d %H:%–ú:%–°')} "
                        f"–≤ {chat_type}: {usage.duration:.1f} —Å–µ–∫.\n"
                    )

            await message.answer(stats_message)

    except Exception as e:
        logger.error(f"Error getting stats: {e}", exc_info=True)
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")